const circomlibjs = require("circomlibjs");
const { MerkleTree } = require("fixed-merkle-tree");

const { leBufferToBigint, hexToBigint } = require("./bigint.js");

// Constants from MerkleTreeWithHistory.sol
const MERKLE_TREE_HEIGHT = 32;

// This matches the zeros function in MerkleTreeWithHistory.sol
const ZERO_VALUES = [
"0x16d18e1425b426e92d3d897958aabf099087b2401bfed53290f5a81fe73c69a5",// 0:mimcsponge(keccak256("foom"),0)
"0x1d7a97c61116e168288d66d413fe2125c2ab9c92d121953c647f13ec10033fc0",// 1
"0x17b63b2b4ac17b6e44ca1d2004d39ccfdb1b3393ebbdb72104ede26d921e4ce1",// 2
"0x0ba52b00a0b2e2e061adfdb675c4f8d71a399145db50d35f33e510e744f73707",// 3
"0x2e38f22ac74d9215b0040d6202f507d6644158a80a959d07bbc8f302c7ddaea1",// 4
"0x115dc3f113f746d413e61f6d08de9d3e297d2fe81c238e2769d7ff2fc1d22c5d",// 5
"0x1e23fee872de60a7c358415127a67ccf5cc4d000c0a122caf6eff7569daffd4e",// 6
"0x16817edb094ca1bb21a32712b164b053cc8eac495050a90a95072e6626a05f6b",// 7
"0x201b0769fc89a55f820748719da0ebdbbcaac2e4fe1c4ffa393e12a0d6dbeb97",// 8
"0x07325bddc8d00119fc9166babd5e5c7d3109ab6fef274a707f34beda612c9d04",// 9
"0x0c5d29f4f923e246ae9b8c4acd1324329437fa49b9c3e8c4eacd3a668a116fab",// 10
"0x27a2d03ea7a1a13f8dba960914fc7c7031f666a83381c1771680c65820cc6086",// 11
"0x2c33f6f61b7b08b3b56e6602485f79a810c7eb92bc08d7b37fc284254c069e5a",// 12
"0x2b21a6c0d38784bd8034a63654c3c1414fe7328a88511e7185b03f8502533478",// 13
"0x12c943c1f533a4c1357fa393a12aad59f8782437b42a436b0a82d5a73f0a5216",// 14
"0x1f7dff2a80564da8894bf9fde27237cf344612bfaab08ecdabc8804fd2ed7955",// 15
"0x281128f2ce3a98d98f9c134ca6cf493a84c04c0630e0dd170b5ea12f7060d85e",// 16
"0x23323c9fada751eafc927439fdc9000f875fba03005b1ba831581e3e5e2720b2",// 17
"0x24419f182b352138eda236f549d6cbf9f8249e69007a36ff430d9a2f97162636",// 18
"0x2a29a11d20ce5d61fa36108345ec67f48ed6face1d2782578b6dc38a1863abdf",// 19
"0x19f5038f92557e39950e33d63e7943327bf5a10cfbab76927cbbfea16025ef5d",// 20
"0x2a476b83c463da3bf5ffee66dc37c9086b60ecc5cb2e6c92f3597993216dc6b8",// 21
"0x2da77b3d85111b4e4e22cf178381e28bd3cf33bdda6002281bfc0a9bbbc06c95",// 22
"0x02f0e657ee452146bfbf03c8bbf226757037f2aa2db913ce0b241317b7f36c8f",// 23
"0x088230720d228bd06e0a1e9ba67b4d23ffd32e6ed29400870e66d5d8ebb2a4b3",// 24
"0x1ceed24352c6d531641b9e2f1733f023835f708f73c5ee964c2a5c12ccf75ae3",// 25
"0x2943033e9175e7e9678e68b7d49e199f4b15b5e602f2a9db838bf0ffc74f73af",// 26
"0x070dbb8ce4a0b749bf20d9f1f832490b42d7dac6dd03d3cb4b7fd2af39a9de17",// 27
"0x0add848ba8fd6361fbacfa30a981d423ca1c9588358e4f862b4c49d6772a5363",// 28
"0x1301244413098da001c17a576562d608cbe13c3a6bbc6c35a15cb02e102cb2f3",// 29
"0x144bc4cce778e82915be25e7289151a46a88c3c0a5f1bb5ff35eb9a19667be4e",// 30
"0x2688d58bf9b7e2730ab510122d6d24bdcacd07becc79eea37fff58a8edb074e5",// 31
"0x2753cfd5199dc55cf85933769e95affd5b112737e3b97540c74477322402b407" // ROOT

  /*
  "202a8f96045740e4004986fd2b650cf51b0cc148fb60f01312e628237deef281",//0:mimcsponge(keccak256("FOOM"),0) 
  "0b2e758743ccfa3862e08c5dd379fd69488aa75ad6af13accc53ba97fcbcb528",//1
  "057c4de8d5a8528665a63b905f0101ff7613414908e90d50d2f0c653dbb715de",//2
  "0e1b6cdd46ad9ffd5e994c864581fdf4de1d591f0b036a7f187ecc98ac7c3cb3",//3
  "0bbeaea623e15c126bc2a79b7721293d8c5819c0c93fc6f4b46d96c8d30310ca",//4
  "2cee490e0f6709557a04c4a64a1b2f07de1334e74cabd9eea3f37f8c1e17e522",//5
  "11cb3f75ae3bf84cf9a02a6c1d8feec18c6e81e34c2cf970985b827a56f5f925",//6
  "2a5e106d6c503d83ac7fcd2680b040813f09d95f5c514873b27bdd564eeea9f9",//7
  "017e8145556b5a426ee6112399ea51d95122a72a988f9e753e9117aa3d973d1b",//8
  "11f5c0dbcc3d321f68cb3cb6c16795c1e08d18fbcc7567d204af1af66ca563eb",//9
  "25d3fdb57ca9a4db85f2347ddf635f99730cd68705a54e27fc9a1d9b25d01d11",//10
  "23dc1234876e354166436513d626df9b3810799dfe523d8717a4c33a137a42c9",//11
  "227e0f15e1ff7d57d9d0e5243675d169d193489d0800c9945959174ba5658154",//12
  "0dffe4520de3d082f56bb106e2924b456f825e922761d749eb1a29afb1f784f9",//13
  "1ffa90c56f39c538f241eba71782e4a69aab0fb43cb968505d35a0f14529a05d",//14
  "2201599ef7782d4d035487ab1467a6f0ce0abe69e5e755710ea10e6f4fe51bfd",//15
  "2f426caa63faba590dbb1c463ef494585f254e373fa6a23567cc9291135ef1a4",//16
  "0b0dcf14ca5e6f9a0660818681d21b6df5bd9075e1945df85d957e061eff565d",//17
  "2ae4465fbe8fd25a39f1e0e289098d1a3b26cd274b0ef4c911974b5f1b5bbe57",//18
  "2111ccd495b2338952afea3a1cf0c7e816333240678b1ebc545007179111e956",//19
  "0316a21cfe5ebf127b1efae4ecfbc476c47db546b13c915efebbf917dbad2a63",//20
  "2fdca0843043698e90deb1b0c52181d8188763ebbd88aa6659df9ffb23aa3bc4",//21
  "04c99043b2be17c6af3e10796d0bf75b08d03f413d4af528b198f200dc832939",//22
  "2ebce6763c7028261ed65d432ceec1a7493969c80bbf426ca9167d80a1c8d963",//23
  "23e42a65648de39e532e24e9050c5355fddb331700a155782c4f3a85b1766b6d",//24
  "2f9db21a4c7ab179efa1cac9fc389084ecc410ed2e7d5426ca5dde18777f5df6",//25
  "25d215bce3087b0d8c6ef120d696ce075b22402dd800fcd53f43c382fe5db539",//26
  "29e89141890d3ed3eaf93345eaf7e73ae777091a61e659ec73ca39e5cfc87163",//27
  "2f3c98cd95ccff391976b8954f9b94b0a1ba61497d64eb9575c9f4d9602431ba",//28
  "0e4a4b68ebb99a1cd97ae3bcd3bc3ed63e9a320069e1799ba6cc5b972677ff73",//29
  "2c1f841238f664dd797957778269fa53c8ecdfd1af0c339219b862bb9770064e",//30
  "2150e5c55045c73f99cacd199d6086e84381f17b861cb0fb73fcc8803c180a59",//31
  "0e70c0ce4936fef410bff8991ee5051bfce7d594013b64aba97369ce4f2e2454",// Root
  */
  /*
  "2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c",
  "256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d",
  "1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c200",
  "20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb",
  "0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c9",
  "24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb54959",
  "1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c",
  "19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb4",
  "261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff80",
  "0058459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c007",
  "1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e30",
  "1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e5",
  "0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f",
  "1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd",
  "133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb108",
  "13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b6",
  "1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db61854",
  "0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea",
  "24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d",
  "198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc05",
  "29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d4",
  "19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b2967",
  "1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc3453",
  "10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c48",
  "0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd1",
  "019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c",
  "2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce99",
  "2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f354",
  "002df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d",
  "104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f427",
  "1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb",
  "2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc",
  */
].map(hexToBigint);

// Creates a fixed height merkle-tree with MiMC hash function (just like MerkleTreeWithHistory.sol)
async function mimicMerkleTree(leaves = []) {
  const pedersen = await circomlibjs.buildPedersenHash(); //TODO, not needed, fromMontgomery is in mimc
  const mimcsponge = await circomlibjs.buildMimcSponge();

  const mimcspongeMultiHash = (left, right) =>
    leBufferToBigint(
      pedersen.babyJub.F.fromMontgomery(mimcsponge.multiHash([left, right]))
    );

  return new MerkleTree(MERKLE_TREE_HEIGHT, leaves, {
    hashFunction: mimcspongeMultiHash,
    zeroElement: ZERO_VALUES[0],
  });
}

module.exports = {
  mimicMerkleTree,
};
